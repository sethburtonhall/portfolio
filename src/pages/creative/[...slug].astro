---
import { type CollectionEntry, getCollection } from "astro:content";
import { Picture } from "astro:assets";

import BaseLayout from "@/layouts/BaseLayout.astro";
import Hero from "@/components/Hero.astro";
import Pill from "@/components/Pill.astro";
import Icon from "@/components/Icon.astro";
import ContactCTA from "@/components/ContactCTA.astro";

interface Props {
  entry: CollectionEntry<"creative">;
}

export async function getStaticPaths() {
  const creative = await getCollection("creative");
  return creative.map((entry: { slug: any }) => ({
    params: {
      slug: entry.slug,
    },
    props: {
      entry,
    },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<BaseLayout title={entry.data.title} description={entry.data.description}>
  <div class="stack gap-20">
    <div class="stack gap-16">
      <header>
        <div class="stack container gap-2">
          <a class="back-link" href="/creative/"
            ><Icon icon="arrowLeft" /> Creative Projects</a
          >
          <Hero title={entry.data.title} url={entry.data.url} align="start">
            <div class="details w-full">
              <div class="tags">
                {entry.data.tags.map((t: unknown) => <Pill>{t}</Pill>)}
              </div>
              <p class="description">{entry.data.description}</p>
            </div>
          </Hero>
        </div>
      </header>
      <main class="container">
        <div class="stack content gap-10">
          {
            entry.data.img && (
              <Picture
                src={entry.data.img}
                alt={entry.data.img_alt || ""}
                width={1600}
                height={900}
                loading="eager"
                class="aspect-video object-cover"
              />
            )
          }
          <div
            class="prose-a:gradient-text prose-cite:text-accent prose prose-lg mx-auto p-2 lg:prose-xl prose-headings:text-zinc-900 prose-p:text-zinc-900 prose-blockquote:border-l-4 prose-blockquote:px-6 prose-blockquote:py-2 prose-blockquote:font-brand prose-blockquote:text-stone-100 prose-ul:text-zinc-900 prose-img:border-4 prose-img:border-fuchsia-500 dark:prose-headings:text-zinc-100 dark:prose-p:text-zinc-100 dark:prose-strong:text-zinc-100 dark:prose-ul:text-zinc-100"
          >
            <Content />
          </div>
        </div>
      </main>
    </div>
    <ContactCTA />
  </div>
</BaseLayout>

<style>
  header {
    padding-bottom: 2.5rem;
    border-bottom: 1px solid var(--stone-800);
  }

  .back-link {
    display: none;
  }

  .details {
    display: flex;
    flex-direction: column;
    padding: 0.5rem;
    gap: 1.5rem;
    justify-content: space-between;
    align-items: center;
  }

  .tags {
    display: flex;
    gap: 0.5rem;
  }

  .description {
    font-size: var(--text-md);
    max-width: 54ch;
    text-align: center;
  }

  .content {
    max-width: 65ch;
    margin-inline: auto;
  }

  .content > :global(* + *) {
    margin-top: 1rem;
  }

  .content :global(h1),
  .content :global(h2),
  .content :global(h3),
  .content :global(h4),
  .content :global(h5) {
    margin: 1.5rem 0;
  }

  .content :global(img) {
    border-radius: 1rem;
    box-shadow: var(--shadow-sm);
    background: var(--gradient-subtle);
    border: 1px solid var(--stone-800);
  }

  /* .content :global(blockquote) {
    font-size: var(--text-lg);
    font-family: var(--font-brand);
    font-weight: 600;
    line-height: 1.1;
    padding-inline-start: 1.5rem;
    border-inline-start: 0.25rem solid var(--accent-dark);
    color: var(--stone-0);
  } */

  .back-link,
  .content :global(a) {
    text-decoration: 1px solid underline transparent;
    text-underline-offset: 0.25em;
    transition: text-decoration-color var(--theme-transition);
  }

  .back-link:hover,
  .back-link:focus,
  .content :global(a:hover),
  .content :global(a:focus) {
    text-decoration-color: currentColor;
  }

  @media (min-width: 50em) {
    .back-link {
      display: block;
      align-self: flex-start;
    }

    .details {
      flex-direction: row;
      gap: 2.5rem;
    }

    .description {
      font-size: var(--text-lg);
      text-align: end;
    }
  }
</style>
